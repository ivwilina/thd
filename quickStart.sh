#!/bin/bash

# Colors for output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

echo -e "${BLUE}==========================================="
echo -e "   H·ªá Th·ªëng M√°y T√≠nh Tr·∫ßn Anh"
echo -e "   Quick Start Script"
echo -e "===========================================${NC}"
echo

# Check Node.js
check_nodejs() {
    echo -e "${BLUE}üîç Ki·ªÉm tra Node.js...${NC}"
    if ! command -v node &> /dev/null; then
        echo -e "${RED}‚ùå Node.js kh√¥ng ƒë∆∞·ª£c t√¨m th·∫•y!${NC}"
        echo "Vui l√≤ng c√†i ƒë·∫∑t Node.js t·ª´: https://nodejs.org"
        exit 1
    fi
    echo -e "${GREEN}‚úÖ Node.js ƒë√£ c√†i ƒë·∫∑t: $(node --version)${NC}"
}

# Check MongoDB
check_mongodb() {
    echo -e "${BLUE}üîç Ki·ªÉm tra MongoDB...${NC}"
    if ! command -v mongosh &> /dev/null && ! command -v mongo &> /dev/null; then
        echo -e "${RED}‚ùå MongoDB kh√¥ng ƒë∆∞·ª£c t√¨m th·∫•y!${NC}"
        echo "Vui l√≤ng c√†i ƒë·∫∑t MongoDB t·ª´: https://www.mongodb.com/try/download/community"
        exit 1
    fi
    echo -e "${GREEN}‚úÖ MongoDB ƒë√£ c√†i ƒë·∫∑t${NC}"
}

# Install dependencies
install_deps() {
    echo
    echo -e "${BLUE}üì¶ C√†i ƒë·∫∑t dependencies...${NC}"
    echo

    echo "C√†i ƒë·∫∑t Backend dependencies..."
    cd backend
    npm install
    if [ $? -ne 0 ]; then
        echo -e "${RED}‚ùå L·ªói khi c√†i ƒë·∫∑t backend dependencies!${NC}"
        exit 1
    fi

    echo
    echo "C√†i ƒë·∫∑t Frontend dependencies..."
    cd ../frontend/may_tinh_tran_anh
    npm install
    if [ $? -ne 0 ]; then
        echo -e "${RED}‚ùå L·ªói khi c√†i ƒë·∫∑t frontend dependencies!${NC}"
        exit 1
    fi

    cd ../..
    echo -e "${GREEN}‚úÖ C√†i ƒë·∫∑t dependencies th√†nh c√¥ng!${NC}"
}

# Setup sample data
setup_data() {
    echo
    echo -e "${BLUE}üîß Setup d·ªØ li·ªáu m·∫´u...${NC}"
    cd backend
    node setupComplete.js
    cd ..
    echo
    echo -e "${GREEN}‚úÖ Setup d·ªØ li·ªáu ho√†n th√†nh!${NC}"
}

# Health check
health_check() {
    echo
    echo -e "${BLUE}üè• Ki·ªÉm tra h·ªá th·ªëng...${NC}"
    cd backend
    node healthCheck.js
    cd ..
}

# Start system
start_system() {
    echo
    echo -e "${BLUE}üöÄ Kh·ªüi ch·∫°y h·ªá th·ªëng...${NC}"
    echo

    echo "B∆∞·ªõc 1: Kh·ªüi ƒë·ªông Backend Server..."
    cd backend
    gnome-terminal --title="Backend Server" -- bash -c "npm run dev; exec bash" 2>/dev/null || \
    osascript -e 'tell app "Terminal" to do script "cd \"'$(pwd)'\" && npm run dev"' 2>/dev/null || \
    (echo "Kh·ªüi ƒë·ªông backend trong background..." && npm run dev &)
    
    sleep 3

    echo "B∆∞·ªõc 2: Kh·ªüi ƒë·ªông Frontend App..."
    cd ../frontend/may_tinh_tran_anh
    gnome-terminal --title="Frontend App" -- bash -c "npm start; exec bash" 2>/dev/null || \
    osascript -e 'tell app "Terminal" to do script "cd \"'$(pwd)'\" && npm start"' 2>/dev/null || \
    (echo "Kh·ªüi ƒë·ªông frontend trong background..." && npm start &)

    cd ../..
    echo
    echo -e "${GREEN}‚úÖ H·ªá th·ªëng ƒëang kh·ªüi ƒë·ªông!${NC}"
    echo
    echo -e "${BLUE}üåê URLs:${NC}"
    echo "   Frontend: http://localhost:3000"
    echo "   Backend:  http://localhost:3001"
    echo
    echo -e "${BLUE}üîë T√†i kho·∫£n m·∫∑c ƒë·ªãnh:${NC}"
    echo "   Admin: admin@maytinhrananh.com / admin123"
    echo "   Staff: staff1@maytinhrananh.com / staff123"
    echo
    
    # Try to open browser
    if command -v xdg-open &> /dev/null; then
        echo "ƒêang m·ªü tr√¨nh duy·ªát..."
        xdg-open http://localhost:3000
    elif command -v open &> /dev/null; then
        echo "ƒêang m·ªü tr√¨nh duy·ªát..."
        open http://localhost:3000
    else
        echo "Vui l√≤ng m·ªü tr√¨nh duy·ªát v√† truy c·∫≠p: http://localhost:3000"
    fi
}

# Cleanup files
cleanup_files() {
    echo
    echo -e "${BLUE}üßπ D·ªçn d·∫πp file test v√† b√°o c√°o...${NC}"
    if [ -f "cleanup.sh" ]; then
        chmod +x cleanup.sh
        ./cleanup.sh
    else
        echo -e "${YELLOW}‚ö†Ô∏è  File cleanup.sh kh√¥ng t·ªìn t·∫°i${NC}"
    fi
    echo -e "${GREEN}‚úÖ D·ªçn d·∫πp ho√†n th√†nh!${NC}"
}

# Show menu
show_menu() {
    echo
    echo "Ch·ªçn h√†nh ƒë·ªông:"
    echo "1. C√†i ƒë·∫∑t dependencies (l·∫ßn ƒë·∫ßu)"
    echo "2. Setup d·ªØ li·ªáu m·∫´u"
    echo "3. Ki·ªÉm tra h·ªá th·ªëng"
    echo "4. Kh·ªüi ch·∫°y Backend + Frontend"
    echo "5. D·ªçn d·∫πp file test"
    echo "0. Tho√°t"
    echo
    read -p "Nh·∫≠p l·ª±a ch·ªçn (0-5): " choice
}

# Main function
main() {
    check_nodejs
    check_mongodb

    while true; do
        show_menu
        case $choice in
            1)
                install_deps
                read -p "Nh·∫•n Enter ƒë·ªÉ ti·∫øp t·ª•c..."
                ;;
            2)
                setup_data
                read -p "Nh·∫•n Enter ƒë·ªÉ ti·∫øp t·ª•c..."
                ;;
            3)
                health_check
                read -p "Nh·∫•n Enter ƒë·ªÉ ti·∫øp t·ª•c..."
                ;;
            4)
                start_system
                break
                ;;
            5)
                cleanup_files
                read -p "Nh·∫•n Enter ƒë·ªÉ ti·∫øp t·ª•c..."
                ;;
            0)
                echo
                echo -e "${GREEN}üëã C·∫£m ∆°n b·∫°n ƒë√£ s·ª≠ d·ª•ng h·ªá th·ªëng!${NC}"
                exit 0
                ;;
            *)
                echo -e "${RED}‚ùå L·ª±a ch·ªçn kh√¥ng h·ª£p l·ªá!${NC}"
                read -p "Nh·∫•n Enter ƒë·ªÉ ti·∫øp t·ª•c..."
                ;;
        esac
        clear
    done
}

# Run main function
main
